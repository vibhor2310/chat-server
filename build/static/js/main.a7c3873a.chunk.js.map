{"version":3,"sources":["components/SingleChat.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/HomePage.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","context/ChatProvider.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/Sidedrawer.js","Pages/ChatPage.js","App.js","reportWebVitals.js","index.js"],"names":["socket","selectedChatCompare","Login","_useState","useState","_useState2","_slicedToArray","show","setShow","toast","useToast","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","loading","setLoading","history","useHistory","submitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","localStorage","setItem","JSON","stringify","push","t0","description","response","message","stop","apply","arguments","_jsxs","VStack","spacing","children","FormControl","id","isRequired","_jsx","FormLabel","Input","value","type","placeholder","onChange","e","target","InputGroup","size","InputRightElement","width","Button","h","onClick","colorScheme","style","marginTop","isLoading","variant","Signup","handleClick","name","setName","confirmpassword","setConfirmpassword","_useState9","_useState10","_useState11","_useState12","pic","setPic","_useState13","_useState14","picLoading","setPicLoading","console","log","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","Homepage","useEffect","parse","getItem","Container","maxW","centerContent","Box","d","justifyContent","bg","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","Tabs","isFitted","TabList","mb","Tab","TabPanels","TabPanel","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","ProfileModal","user","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_Fragment","IconButton","base","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","src","alt","md","ModalFooter","ChatContext","createContext","ChatState","useContext","ChatProvider","selectedChat","setSelectedChat","setUser","notification","setNotification","chats","setChats","userInfo","Provider","ScrollableChat","ScrollableFeed","map","display","Tooltip","label","placement","hasArrow","Avatar","mt","mr","cursor","backgroundColor","concat","marginLeft","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","Badge","px","py","CloseIcon","pl","UserListItem","_hover","background","color","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","_ChatState","handleSearch","_ref2","query","_yield$axios$get","Authorization","token","get","_x","handleRename","_ref3","_callee2","_yield$axios$put","_context2","put","chatId","chatName","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","_x3","flexWrap","pb","ml","Spinner","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","_toConsumableArray","io","on","newMessageRecieved","chat","includes","ArrowBackIcon","isGroupChat","toUpperCase","overflowY","alignSelf","margin","className","onKeyDown","Lottie","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","Chatbox","ChatLoading","Stack","Skeleton","height","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","as","ChevronDownIcon","MenuDivider","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","Chatpage","App","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","ChakraProvider","BrowserRouter","document","getElementById"],"mappings":"iqMAmBIA,EAAQC,E,gJCuGGC,EAjHD,WACZ,IAAAC,EAAwBC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAhCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEdI,EAAQC,cACdC,EAA0BP,qBAAUQ,EAAAN,YAAAK,EAAA,GAA7BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAAgCX,qBAAUY,EAAAV,YAAAS,EAAA,GAAnCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,EAA8Bf,oBAAS,GAAMgB,EAAAd,YAAAa,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,EAAUC,cAEVC,EAAa,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,GAAjBf,GAAW,GACNT,GAAUI,EAAQ,CAAAkB,EAAAE,KAAA,QAQH,OAPlB5B,EAAM,CACJ6B,MAAO,6BACPC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZpB,GAAW,GAAOa,EAAAQ,OAAA,iBAUjB,OAViBR,EAAAC,KAAA,EAMZL,EAAS,CACba,QAAS,CACP,eAAgB,qBAEnBT,EAAAE,KAAA,EAEsBQ,IAAMC,KAC3B,kBACA,CAAEjC,QAAOI,YACTc,GACA,KAAD,EAAAC,EAAAG,EAAAY,KAJOd,EAAID,EAAJC,KAORxB,EAAM,CACJ6B,MAAO,mBACPC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZM,aAAaC,QAAQ,WAAYC,KAAKC,UAAUlB,IAChDX,GAAW,GACXC,EAAQ6B,KAAK,UAAUjB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,SAEvB1B,EAAM,CACJ6B,MAAO,iBACPgB,YAAanB,EAAAkB,GAAME,SAAStB,KAAKuB,QACjCjB,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZpB,GAAW,GAAO,yBAAAa,EAAAsB,OAAA,GAAA3B,EAAA,mBAErB,kBAlDkB,OAAAJ,EAAAgC,MAAA,KAAAC,UAAA,KAoDnB,OACEC,eAACC,IAAM,CAACC,QAAQ,OAAMC,SAAA,CACpBH,eAACI,IAAW,CAACC,GAAG,QAAQC,YAAU,EAAAH,SAAA,CAChCI,cAACC,IAAS,CAAAL,SAAC,kBACXI,cAACE,IAAK,CACJC,MAAOzD,EACP0D,KAAK,QACLC,YAAY,2BACZC,SAAU,SAACC,GAAC,OAAK5D,EAAS4D,EAAEC,OAAOL,MAAM,OAG7CV,eAACI,IAAW,CAACC,GAAG,WAAWC,YAAU,EAAAH,SAAA,CACnCI,cAACC,IAAS,CAAAL,SAAC,aACXH,eAACgB,IAAU,CAACC,KAAK,KAAId,SAAA,CACnBI,cAACE,IAAK,CACJC,MAAOrD,EACPwD,SAAU,SAACC,GAAC,OAAKxD,EAAYwD,EAAEC,OAAOL,MAAM,EAC5CC,KAAMhE,EAAO,OAAS,WACtBiE,YAAY,mBAEdL,cAACW,IAAiB,CAACC,MAAM,SAAQhB,SAC/BI,cAACa,IAAM,CAACC,EAAE,UAAUJ,KAAK,KAAKK,QAjFpB,WAAH,OAAS1E,GAASD,EAAM,EAiFoBwD,SAChDxD,EAAO,OAAS,iBAKzB4D,cAACa,IAAM,CACLG,YAAY,OACZJ,MAAM,OACNK,MAAO,CAAEC,UAAW,IACpBH,QAASzD,EACT6D,UAAWjE,EAAQ0C,SACpB,UAGDI,cAACa,IAAM,CACLO,QAAQ,QACRJ,YAAY,MACZJ,MAAM,OACNG,QAAS,WACPpE,EAAS,qBACTI,EAAY,SACd,EAAE6C,SACH,iCAKP,ECgFeyB,EA/LA,WACb,IAAArF,EAAwBC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAhCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACdoF,EAAc,WAAH,OAASjF,GAASD,EAAM,EACnCE,EAAQC,cACRa,EAAUC,cAEhBb,EAAwBP,qBAAUQ,EAAAN,YAAAK,EAAA,GAA3B+E,EAAI9E,EAAA,GAAE+E,EAAO/E,EAAA,GACpBG,EAA0BX,qBAAUY,EAAAV,YAAAS,EAAA,GAA7BF,EAAKG,EAAA,GAAEF,EAAQE,EAAA,GACtBG,EAA8Cf,qBAAUgB,EAAAd,YAAAa,EAAA,GAAjDyE,EAAexE,EAAA,GAAEyE,EAAkBzE,EAAA,GAC1C0E,EAAgC1F,qBAAU2F,EAAAzF,YAAAwF,EAAA,GAAnC7E,EAAQ8E,EAAA,GAAE7E,EAAW6E,EAAA,GAC5BC,EAAsB5F,qBAAU6F,EAAA3F,YAAA0F,EAAA,GAAzBE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAClBG,EAAoChG,oBAAS,GAAMiG,EAAA/F,YAAA8F,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1B5E,EAAa,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACA,GAApBkE,GAAc,GACTb,GAAS7E,GAAUI,GAAa2E,EAAe,CAAAzD,EAAAE,KAAA,QAQ7B,OAPrB5B,EAAM,CACJ6B,MAAO,6BACPC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZ6D,GAAc,GAAOpE,EAAAQ,OAAA,oBAGnB1B,IAAa2E,EAAe,CAAAzD,EAAAE,KAAA,QAO3B,OANH5B,EAAM,CACJ6B,MAAO,yBACPC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WACTP,EAAAQ,OAAA,iBASF,OANH6D,QAAQC,IAAIf,EAAM7E,EAAOI,EAAUiF,GAAK/D,EAAAC,KAAA,EAEhCL,EAAS,CACba,QAAS,CACP,eAAgB,qBAEnBT,EAAAE,KAAA,GACsBQ,IAAMC,KAC3B,YACA,CACE4C,OACA7E,QACAI,WACAiF,OAEFnE,GACA,KAAD,GAAAC,EAAAG,EAAAY,KATOd,EAAID,EAAJC,KAURuE,QAAQC,IAAIxE,GACZxB,EAAM,CACJ6B,MAAO,0BACPC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZM,aAAaC,QAAQ,WAAYC,KAAKC,UAAUlB,IAChDsE,GAAc,GACdhF,EAAQ6B,KAAK,UAAUjB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,SAEvB1B,EAAM,CACJ6B,MAAO,iBACPgB,YAAanB,EAAAkB,GAAME,SAAStB,KAAKuB,QACjCjB,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZ6D,GAAc,GAAO,yBAAApE,EAAAsB,OAAA,GAAA3B,EAAA,mBAExB,kBA9DkB,OAAAJ,EAAAgC,MAAA,KAAAC,UAAA,KA6GnB,OACEC,eAACC,IAAM,CAACC,QAAQ,MAAKC,SAAA,CACnBH,eAACI,IAAW,CAACC,GAAG,aAAaC,YAAU,EAAAH,SAAA,CACrCI,cAACC,IAAS,CAAAL,SAAC,SACXI,cAACE,IAAK,CACJG,YAAY,kBACZC,SAAU,SAACC,GAAC,OAAKiB,EAAQjB,EAAEC,OAAOL,MAAM,OAG5CV,eAACI,IAAW,CAACC,GAAG,QAAQC,YAAU,EAAAH,SAAA,CAChCI,cAACC,IAAS,CAAAL,SAAC,kBACXI,cAACE,IAAK,CACJE,KAAK,QACLC,YAAY,2BACZC,SAAU,SAACC,GAAC,OAAK5D,EAAS4D,EAAEC,OAAOL,MAAM,OAG7CV,eAACI,IAAW,CAACC,GAAG,WAAWC,YAAU,EAAAH,SAAA,CACnCI,cAACC,IAAS,CAAAL,SAAC,aACXH,eAACgB,IAAU,CAACC,KAAK,KAAId,SAAA,CACnBI,cAACE,IAAK,CACJE,KAAMhE,EAAO,OAAS,WACtBiE,YAAY,iBACZC,SAAU,SAACC,GAAC,OAAKxD,EAAYwD,EAAEC,OAAOL,MAAM,IAE9CH,cAACW,IAAiB,CAACC,MAAM,SAAQhB,SAC/BI,cAACa,IAAM,CAACC,EAAE,UAAUJ,KAAK,KAAKK,QAASO,EAAY1B,SAChDxD,EAAO,OAAS,iBAKzBqD,eAACI,IAAW,CAACC,GAAG,WAAWC,YAAU,EAAAH,SAAA,CACnCI,cAACC,IAAS,CAAAL,SAAC,qBACXH,eAACgB,IAAU,CAACC,KAAK,KAAId,SAAA,CACnBI,cAACE,IAAK,CACJE,KAAMhE,EAAO,OAAS,WACtBiE,YAAY,mBACZC,SAAU,SAACC,GAAC,OAAKmB,EAAmBnB,EAAEC,OAAOL,MAAM,IAErDH,cAACW,IAAiB,CAACC,MAAM,SAAQhB,SAC/BI,cAACa,IAAM,CAACC,EAAE,UAAUJ,KAAK,KAAKK,QAASO,EAAY1B,SAChDxD,EAAO,OAAS,iBAKzBqD,eAACI,IAAW,CAACC,GAAG,MAAKF,SAAA,CACnBI,cAACC,IAAS,CAAAL,SAAC,wBACXI,cAACE,IAAK,CACJE,KAAK,OACLmC,EAAG,IACHC,OAAO,UACPlC,SAAU,SAACC,GAAC,OAlGA,SAACkC,GAEnB,GADAL,GAAc,QACDM,IAATD,EAAJ,CAWA,GADAJ,QAAQC,IAAIG,GACM,eAAdA,EAAKrC,MAAuC,cAAdqC,EAAKrC,MAAoC,cAAdqC,EAAKrC,KA4BhE,OARA9D,EAAM,CACJ6B,MAAO,0BACPC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,gBAEZ6D,GAAc,GA1Bd,IAAMtE,EAAO,IAAI6E,SACjB7E,EAAK8E,OAAO,OAAQH,GACpB3E,EAAK8E,OAAO,gBAAiB,aAC7B9E,EAAK8E,OAAO,aAAc,aAC1BC,MAAM,yDAA0D,CAC9DC,OAAQ,OACRC,KAAMjF,IAELkF,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAAClF,GACLkE,EAAOlE,EAAKqF,IAAIC,YAChBf,QAAQC,IAAIxE,EAAKqF,IAAIC,YACrBhB,GAAc,EAChB,IACCiB,OAAM,SAACC,GACNjB,QAAQC,IAAIgB,GACZlB,GAAc,EAChB,GApBJ,MARE9F,EAAM,CACJ6B,MAAO,0BACPC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,UAmChB,CAuDyBgF,CAAYhD,EAAEC,OAAOgD,MAAM,GAAG,OAGnDxD,cAACa,IAAM,CACLG,YAAY,OACZJ,MAAM,OACNK,MAAO,CAAEC,UAAW,IACpBH,QAASzD,EACT6D,UAAWgB,EAAWvC,SACvB,cAKP,ECzIe6D,EA7CA,WACb,IAAMrG,EAAUC,cAQhB,OANAqG,qBAAU,WACK3E,KAAK4E,MAAM9E,aAAa+E,QAAQ,cAEnCxG,EAAQ6B,KAAK,SACzB,GAAG,CAAC7B,IAGFqC,eAACoE,IAAS,CAACC,KAAK,KAAKC,eAAa,EAAAnE,SAAA,CAChCI,cAACgE,IAAG,CACFC,EAAE,OACFC,eAAe,SACf3B,EAAG,EACH4B,GAAG,QACHC,EAAE,OACFC,EAAE,gBACFC,aAAa,KACbC,YAAY,MAAK3E,SAEjBI,cAACwE,IAAI,CAACC,SAAS,MAAMC,WAAW,YAAW9E,SAAC,0CAI9CI,cAACgE,IAAG,CAACG,GAAG,QAAQC,EAAE,OAAO7B,EAAG,EAAG+B,aAAa,KAAKC,YAAY,MAAK3E,SAChEH,eAACkF,IAAI,CAACC,UAAQ,EAACxD,QAAQ,eAAcxB,SAAA,CACnCH,eAACoF,IAAO,CAACC,GAAG,MAAKlF,SAAA,CACfI,cAAC+E,IAAG,CAAAnF,SAAC,UACLI,cAAC+E,IAAG,CAAAnF,SAAC,eAEPH,eAACuF,IAAS,CAAApF,SAAA,CACRI,cAACiF,IAAQ,CAAArF,SACPI,cAACjE,EAAK,MAERiE,cAACiF,IAAQ,CAAArF,SACPI,cAACqB,EAAM,gBAOrB,E,yBC3Da6D,EAAqB,SAACC,EAAUd,EAAGe,EAAGC,GAG/C,OACED,EAAID,EAASG,OAAS,GACtBH,EAASC,EAAI,GAAGG,OAAOC,MAAQnB,EAAEkB,OAAOC,KACxCL,EAASC,GAAGG,OAAOC,MAAQH,EAEpB,GAEND,EAAID,EAASG,OAAS,GACrBH,EAASC,EAAI,GAAGG,OAAOC,MAAQnB,EAAEkB,OAAOC,KACxCL,EAASC,GAAGG,OAAOC,MAAQH,GAC5BD,IAAMD,EAASG,OAAS,GAAKH,EAASC,GAAGG,OAAOC,MAAQH,EAElD,EACG,MACd,EAEaI,EAAe,SAACN,EAAUd,EAAGe,EAAGC,GAC3C,OACED,EAAID,EAASG,OAAS,IACrBH,EAASC,EAAI,GAAGG,OAAOC,MAAQnB,EAAEkB,OAAOC,UACR9C,IAA/ByC,EAASC,EAAI,GAAGG,OAAOC,MACzBL,EAASC,GAAGG,OAAOC,MAAQH,CAE/B,EAEaK,EAAgB,SAACP,EAAUC,EAAGC,GACzC,OACED,IAAMD,EAASG,OAAS,GACxBH,EAASA,EAASG,OAAS,GAAGC,OAAOC,MAAQH,GAC7CF,EAASA,EAASG,OAAS,GAAGC,OAAOC,GAEzC,EAEaG,EAAa,SAACR,EAAUd,EAAGe,GACtC,OAAOA,EAAI,GAAKD,EAASC,EAAI,GAAGG,OAAOC,MAAQnB,EAAEkB,OAAOC,GAC1D,EAEaI,EAAY,SAACC,EAAYC,GACpC,OAAOA,EAAM,GAAGN,MAAQK,EAAWL,IAAMM,EAAM,GAAGvE,KAAOuE,EAAM,GAAGvE,IACpE,E,gCCwBawE,EAlDM,SAAHxI,GAA4B,IAAtByI,EAAIzI,EAAJyI,KAAMpG,EAAQrC,EAARqC,SAC5BqG,EAAoCC,cAA5BC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QAExB,OACE5G,eAAA6G,WAAA,CAAA1G,SAAA,CACGA,EACCI,cAAA,QAAMe,QAASqF,EAAOxG,SAAEA,IAExBI,cAACuG,IAAU,CAACtC,EAAG,CAAEuC,KAAM,QAAUC,KAAMzG,cAAC0G,IAAQ,IAAK3F,QAASqF,IAEhE3G,eAACkH,IAAK,CAACjG,KAAK,KAAK2F,QAASA,EAASF,OAAQA,EAAQS,YAAU,EAAAhH,SAAA,CAC3DI,cAAC6G,IAAY,IACbpH,eAACqH,IAAY,CAAChG,EAAE,QAAOlB,SAAA,CACrBI,cAAC+G,IAAW,CACVtC,SAAS,OACTC,WAAW,YACXT,EAAE,OACFC,eAAe,SAAQtE,SAEtBoG,EAAKzE,OAERvB,cAACgH,IAAgB,IACjBvH,eAACwH,IAAS,CACRhD,EAAE,OACFiD,QAAQ,SACRC,WAAW,SACXjD,eAAe,gBAAetE,SAAA,CAE9BI,cAACoH,IAAK,CACJ9C,aAAa,OACb+C,QAAQ,QACRC,IAAKtB,EAAKjE,IACVwF,IAAKvB,EAAKzE,OAEZ9B,eAAC+E,IAAI,CACHC,SAAU,CAAE+B,KAAM,OAAQgB,GAAI,QAC9B9C,WAAW,YAAW9E,SAAA,CACvB,UACSoG,EAAKtJ,YAGjBsD,cAACyH,IAAW,CAAA7H,SACVI,cAACa,IAAM,CAACE,QAASsF,EAAQzG,SAAC,oBAMtC,E,yBC7DM8H,EAAcC,0BAoCPC,EAAY,WACvB,OAAOC,qBAAWH,EACpB,EAEeI,EAtCM,SAAHvK,GAAsB,IAAhBqC,EAAQrC,EAARqC,SACtB5D,EAAwCC,qBAAUC,EAAAC,YAAAH,EAAA,GAA3C+L,EAAY7L,EAAA,GAAE8L,EAAe9L,EAAA,GACpCM,EAAwBP,qBAAUQ,EAAAN,YAAAK,EAAA,GAA3BwJ,EAAIvJ,EAAA,GAAEwL,EAAOxL,EAAA,GACpBG,EAAwCX,mBAAS,IAAGY,EAAAV,YAAAS,EAAA,GAA7CsL,EAAYrL,EAAA,GAAEsL,EAAetL,EAAA,GACpCG,EAA0Bf,qBAAUgB,EAAAd,YAAAa,EAAA,GAA7BoL,EAAKnL,EAAA,GAAEoL,EAAQpL,EAAA,GAEhBG,EAAUC,cAUhB,OARAqG,qBAAU,WACR,IAAM4E,EAAWvJ,KAAK4E,MAAM9E,aAAa+E,QAAQ,aACjDqE,EAAQK,GAEHA,GAAUlL,EAAQ6B,KAAK,IAE9B,GAAG,CAAC7B,IAGF4C,cAAC0H,EAAYa,SAAQ,CACnBpI,MAAO,CACL4H,eACAC,kBACAhC,OACAiC,UACAC,eACAC,kBACAC,QACAC,YACAzI,SAEDA,GAGP,ECee4I,EAzCQ,SAAHjL,GAAsB,IAAhB4H,EAAQ5H,EAAR4H,SAChBa,EAAS4B,IAAT5B,KAER,OACEhG,cAACyI,IAAc,CAAA7I,SACZuF,GACCA,EAASuD,KAAI,SAACrE,EAAGe,GAAC,OAChB3F,eAAA,OAAKwB,MAAO,CAAE0H,QAAS,QAAS/I,SAAA,EAC5B6F,EAAaN,EAAUd,EAAGe,EAAGY,EAAKR,MAClCE,EAAcP,EAAUC,EAAGY,EAAKR,OAChCxF,cAAC4I,IAAO,CAACC,MAAOxE,EAAEkB,OAAOhE,KAAMuH,UAAU,eAAeC,UAAQ,EAAAnJ,SAC9DI,cAACgJ,IAAM,CACLC,GAAG,MACHC,GAAI,EACJxI,KAAK,KACLyI,OAAO,UACP5H,KAAM8C,EAAEkB,OAAOhE,KACf+F,IAAKjD,EAAEkB,OAAOxD,QAIpB/B,cAAA,QACEiB,MAAO,CACLmI,gBAAgB,GAADC,OACbhF,EAAEkB,OAAOC,MAAQQ,EAAKR,IAAM,UAAY,WAE1C8D,WAAYpE,EAAmBC,EAAUd,EAAGe,EAAGY,EAAKR,KACpDtE,UAAWyE,EAAWR,EAAUd,EAAGe,EAAGY,EAAKR,KAAO,EAAI,GACtDlB,aAAc,OACdiF,QAAS,WACTC,SAAU,OACV5J,SAEDyE,EAAEoF,YA1B+BpF,EAAEmB,IA4BlC,KAIhB,E,oCC1BekE,EArBO,SAAHnM,GAAyC,IAAnCyI,EAAIzI,EAAJyI,KAAM2D,EAAcpM,EAAdoM,eAAgBC,EAAKrM,EAALqM,MAC7C,OACEnK,eAACoK,IAAK,CACJC,GAAI,EACJC,GAAI,EACJzF,aAAa,KACbD,EAAG,EACHS,GAAI,EACJ1D,QAAQ,QACRqD,SAAU,GACVzD,YAAY,SACZmI,OAAO,UACPpI,QAAS4I,EAAe/J,SAAA,CAEvBoG,EAAKzE,KACLqI,IAAU5D,EAAKR,KAAOxF,cAAA,QAAAJ,SAAM,aAC7BI,cAACgK,IAAS,CAACC,GAAI,MAGrB,ECqBeC,EAvCM,SAAH3M,GAAiC,IAA5ByI,EAAIzI,EAAJyI,KAAM2D,EAAcpM,EAAdoM,eAG3B,OACElK,eAACuE,IAAG,CACFjD,QAAS4I,EACTR,OAAO,UACPhF,GAAG,UACHgG,OAAQ,CACNC,WAAY,UACZC,MAAO,SAETjG,EAAE,OACFH,EAAE,OACFkD,WAAW,SACXkD,MAAM,QACNP,GAAI,EACJC,GAAI,EACJjF,GAAI,EACJR,aAAa,KAAI1E,SAAA,CAEjBI,cAACgJ,IAAM,CACLE,GAAI,EACJxI,KAAK,KACLyI,OAAO,UACP5H,KAAMyE,EAAKzE,KACX+F,IAAKtB,EAAKjE,MAEZtC,eAACuE,IAAG,CAAApE,SAAA,CACFI,cAACwE,IAAI,CAAA5E,SAAEoG,EAAKzE,OACZ9B,eAAC+E,IAAI,CAACC,SAAS,KAAI7E,SAAA,CACjBI,cAAA,KAAAJ,SAAG,aACFoG,EAAKtJ,cAKhB,ECgPe4N,EAjQc,SAAH/M,GAAsD,IAAhDgN,EAAahN,EAAbgN,cAAeC,EAAUjN,EAAViN,WAAYC,EAAalN,EAAbkN,cACzDxE,EAAoCC,cAA5BC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QACxBrK,EAA0CC,qBAAUC,EAAAC,YAAAH,EAAA,GAA7C0O,EAAaxO,EAAA,GAAEyO,EAAgBzO,EAAA,GACtCM,EAA4BP,mBAAS,IAAGQ,EAAAN,YAAAK,EAAA,GAAjCoO,EAAMnO,EAAA,GAAEoO,EAASpO,EAAA,GACxBG,EAAwCX,mBAAS,IAAGY,EAAAV,YAAAS,EAAA,GAA7CkO,EAAYjO,EAAA,GAAEkO,EAAelO,EAAA,GACpCG,EAA8Bf,oBAAS,GAAMgB,EAAAd,YAAAa,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1B0E,EAA0C1F,oBAAS,GAAM2F,EAAAzF,YAAAwF,EAAA,GAAlDqJ,EAAapJ,EAAA,GAAEqJ,EAAgBrJ,EAAA,GAChCtF,EAAQC,cAEd2O,EAAgDtD,IAAxCG,EAAYmD,EAAZnD,aAAcC,EAAekD,EAAflD,gBAAiBhC,EAAIkF,EAAJlF,KAEjCmF,EAAY,eAAAC,EAAA5N,YAAAC,cAAAC,MAAG,SAAAC,EAAO0N,GAAK,IAAAzN,EAAA0N,EAAAxN,EAAA,OAAAL,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACd,GAAjB2M,EAAUQ,GACLA,EAAM,CAADrN,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,iBAUP,OAVOR,EAAAC,KAAA,EAKRd,GAAW,GACLS,EAAS,CACba,QAAS,CACP8M,cAAc,UAADlC,OAAYrD,EAAKwF,SAEjCxN,EAAAE,KAAA,EACsBQ,IAAM+M,IAAI,oBAADpC,OAAqBuB,GAAUhN,GAAQ,KAAD,EAAA0N,EAAAtN,EAAAY,KAA9Dd,EAAIwN,EAAJxN,KACRuE,QAAQC,IAAIxE,GACZX,GAAW,GACX4N,EAAgBjN,GAAME,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,SAEtB1B,EAAM,CACJ6B,MAAO,iBACPgB,YAAa,oCACbf,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,gBAEZpB,GAAW,GAAO,yBAAAa,EAAAsB,OAAA,GAAA3B,EAAA,mBAErB,gBA5BiB+N,GAAA,OAAAN,EAAA7L,MAAA,KAAAC,UAAA,KA8BZmM,EAAY,eAAAC,EAAApO,YAAAC,cAAAC,MAAG,SAAAmO,IAAA,IAAAjO,EAAAkO,EAAAhO,EAAA,OAAAL,cAAAM,MAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA7N,MAAA,UACdwM,EAAc,CAADqB,EAAA7N,KAAA,eAAA6N,EAAAvN,OAAA,iBAQf,OAReuN,EAAA9N,KAAA,EAGhBgN,GAAiB,GACXrN,EAAS,CACba,QAAS,CACP8M,cAAc,UAADlC,OAAYrD,EAAKwF,SAEjCO,EAAA7N,KAAA,EACsBQ,IAAMsN,IAAI,mBAE/B,CACEC,OAAQlE,EAAavC,IACrB0G,SAAUxB,GAEZ9M,GACA,KAAD,EAAAkO,EAAAC,EAAAnN,KAPOd,EAAIgO,EAAJhO,KASRuE,QAAQC,IAAIxE,EAAK0H,KAEjBwC,EAAgBlK,GAChB2M,GAAeD,GACfS,GAAiB,GAAOc,EAAA7N,KAAA,iBAAA6N,EAAA9N,KAAA,GAAA8N,EAAA7M,GAAA6M,EAAA,SAExBzP,EAAM,CACJ6B,MAAO,iBACPgB,YAAa4M,EAAA7M,GAAME,SAAStB,KAAKuB,QACjCjB,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZ0M,GAAiB,GAAO,QAE1BN,EAAiB,IAAI,yBAAAoB,EAAAzM,OAAA,GAAAuM,EAAA,mBACtB,kBApCiB,OAAAD,EAAArM,MAAA,KAAAC,UAAA,KAsCZ2M,EAAa,eAAAC,EAAA5O,YAAAC,cAAAC,MAAG,SAAA2O,EAAOC,GAAK,IAAA1O,EAAA2O,EAAAzO,EAAA,OAAAL,cAAAM,MAAA,SAAAyO,GAAA,cAAAA,EAAAvO,KAAAuO,EAAAtO,MAAA,WAC5B6J,EAAajC,MAAM2G,MAAK,SAACC,GAAC,OAAKA,EAAElH,MAAQ8G,EAAM9G,GAAG,IAAE,CAADgH,EAAAtO,KAAA,QAOlD,OANH5B,EAAM,CACJ6B,MAAO,yBACPC,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WACTiO,EAAAhO,OAAA,oBAIDuJ,EAAa4E,WAAWnH,MAAQQ,EAAKR,IAAG,CAAAgH,EAAAtO,KAAA,QAOvC,OANH5B,EAAM,CACJ6B,MAAO,+BACPC,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WACTiO,EAAAhO,OAAA,iBAUF,OAVEgO,EAAAvO,KAAA,EAKHd,GAAW,GACLS,EAAS,CACba,QAAS,CACP8M,cAAc,UAADlC,OAAYrD,EAAKwF,SAEjCgB,EAAAtO,KAAA,GACsBQ,IAAMsN,IAAI,qBAE/B,CACEC,OAAQlE,EAAavC,IACrBH,OAAQiH,EAAM9G,KAEhB5H,GACA,KAAD,GAAA2O,EAAAC,EAAA5N,KAPOd,EAAIyO,EAAJzO,KASRkK,EAAgBlK,GAChB2M,GAAeD,GACfrN,GAAW,GAAOqP,EAAAtO,KAAA,iBAAAsO,EAAAvO,KAAA,GAAAuO,EAAAtN,GAAAsN,EAAA,SAElBlQ,EAAM,CACJ6B,MAAO,iBACPgB,YAAaqN,EAAAtN,GAAME,SAAStB,KAAKuB,QACjCjB,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZpB,GAAW,GAAO,QAEpBwN,EAAiB,IAAI,yBAAA6B,EAAAlN,OAAA,GAAA+M,EAAA,mBACtB,gBAtDkBO,GAAA,OAAAR,EAAA7M,MAAA,KAAAC,UAAA,KAwDbqN,GAAY,eAAAC,EAAAtP,YAAAC,cAAAC,MAAG,SAAAqP,EAAOT,GAAK,IAAA1O,EAAAoP,EAAAlP,EAAA,OAAAL,cAAAM,MAAA,SAAAkP,GAAA,cAAAA,EAAAhP,KAAAgP,EAAA/O,MAAA,UAC3B6J,EAAa4E,WAAWnH,MAAQQ,EAAKR,KAAO8G,EAAM9G,MAAQQ,EAAKR,IAAG,CAAAyH,EAAA/O,KAAA,QAOjE,OANH5B,EAAM,CACJ6B,MAAO,kCACPC,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WACT0O,EAAAzO,OAAA,iBAUF,OAVEyO,EAAAhP,KAAA,EAKHd,GAAW,GACLS,EAAS,CACba,QAAS,CACP8M,cAAc,UAADlC,OAAYrD,EAAKwF,SAEjCyB,EAAA/O,KAAA,EACsBQ,IAAMsN,IAAI,wBAE/B,CACEC,OAAQlE,EAAavC,IACrBH,OAAQiH,EAAM9G,KAEhB5H,GACA,KAAD,EAAAoP,EAAAC,EAAArO,KAPOd,EAAIkP,EAAJlP,KASRwO,EAAM9G,MAAQQ,EAAKR,IAAMwC,IAAoBA,EAAgBlK,GAC7D2M,GAAeD,GACfD,IACApN,GAAW,GAAO8P,EAAA/O,KAAA,iBAAA+O,EAAAhP,KAAA,GAAAgP,EAAA/N,GAAA+N,EAAA,SAElB3Q,EAAM,CACJ6B,MAAO,iBACPgB,YAAa8N,EAAA/N,GAAME,SAAStB,KAAKuB,QACjCjB,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZpB,GAAW,GAAO,QAEpBwN,EAAiB,IAAI,yBAAAsC,EAAA3N,OAAA,GAAAyN,EAAA,mBACtB,gBA5CiBG,GAAA,OAAAJ,EAAAvN,MAAA,KAAAC,UAAA,KA8ClB,OACEC,eAAA6G,WAAA,CAAA1G,SAAA,CACEI,cAACuG,IAAU,CAACtC,EAAG,CAAEuC,KAAM,QAAUC,KAAMzG,cAAC0G,IAAQ,IAAK3F,QAASqF,IAE9D3G,eAACkH,IAAK,CAACN,QAASA,EAASF,OAAQA,EAAQS,YAAU,EAAAhH,SAAA,CACjDI,cAAC6G,IAAY,IACbpH,eAACqH,IAAY,CAAAlH,SAAA,CACXI,cAAC+G,IAAW,CACVtC,SAAS,OACTC,WAAW,YACXT,EAAE,OACFC,eAAe,SAAQtE,SAEtBmI,EAAamE,WAGhBlM,cAACgH,IAAgB,IACjBvH,eAACwH,IAAS,CAAChD,EAAE,OAAOiD,QAAQ,SAASC,WAAW,SAAQvH,SAAA,CACtDI,cAACgE,IAAG,CAACI,EAAE,OAAOH,EAAE,OAAOkJ,SAAS,OAAOC,GAAI,EAAExN,SAC1CmI,EAAajC,MAAM4C,KAAI,SAACgE,GAAC,OACxB1M,cAAC0J,EAAa,CAEZ1D,KAAM0G,EACN9C,MAAO7B,EAAa4E,WACpBhD,eAAgB,kBAAMkD,GAAaH,EAAE,GAHhCA,EAAElH,IAIP,MAGN/F,eAACI,IAAW,CAACoE,EAAE,OAAMrE,SAAA,CACnBI,cAACE,IAAK,CACJG,YAAY,YACZyE,GAAI,EACJ3E,MAAOuK,EACPpK,SAAU,SAACC,GAAC,OAAKoK,EAAiBpK,EAAEC,OAAOL,MAAM,IAEnDH,cAACa,IAAM,CACLO,QAAQ,QACRJ,YAAY,OACZqM,GAAI,EACJlM,UAAW6J,EACXjK,QAAS4K,EAAa/L,SACvB,cAIHI,cAACH,IAAW,CAAAD,SACVI,cAACE,IAAK,CACJG,YAAY,oBACZyE,GAAI,EACJxE,SAAU,SAACC,GAAC,OAAK4K,EAAa5K,EAAEC,OAAOL,MAAM,MAIhDjD,EACC8C,cAACsN,IAAO,CAAC5M,KAAK,OAEF,OAAZoK,QAAY,IAAZA,OAAY,EAAZA,EAAcpC,KAAI,SAAC1C,GAAI,OACrBhG,cAACkK,EAAY,CAEXlE,KAAMA,EACN2D,eAAgB,kBAAMwC,EAAcnG,EAAK,GAFpCA,EAAKR,IAGV,OAIRxF,cAACyH,IAAW,CAAA7H,SACVI,cAACa,IAAM,CAACE,QAAS,kBAAM8L,GAAa7G,EAAK,EAAEhF,YAAY,MAAKpB,SAAC,0BAQzE,EVfe2N,EAnPI,SAAHhQ,GAAuC,IAAjCiN,EAAUjN,EAAViN,WAAYC,EAAalN,EAAbkN,cAChCzO,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCmJ,EAAQjJ,EAAA,GAAEsR,EAAWtR,EAAA,GAC5BM,EAA8BP,oBAAS,GAAMQ,EAAAN,YAAAK,EAAA,GAAtCU,EAAOT,EAAA,GAAEU,EAAUV,EAAA,GAC1BG,EAAoCX,mBAAS,IAAGY,EAAAV,YAAAS,EAAA,GAAzC6Q,EAAU5Q,EAAA,GAAE6Q,EAAa7Q,EAAA,GAChCG,EAA8Cf,oBAAS,GAAMgB,EAAAd,YAAAa,EAAA,GAAtD2Q,EAAe1Q,EAAA,GAAE2Q,EAAkB3Q,EAAA,GAC1C0E,EAA4B1F,oBAAS,GAAM2F,EAAAzF,YAAAwF,EAAA,GAApCkM,EAAMjM,EAAA,GAAEkM,EAASlM,EAAA,GACxBC,EAAgC5F,oBAAS,GAAM6F,EAAA3F,YAAA0F,EAAA,GAAxCkM,EAAQjM,EAAA,GAAEkM,EAAWlM,EAAA,GACtBxF,EAAQC,cAER0R,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,CAChBC,oBAAqB,mBAGzBpD,EACEtD,IADMG,GAAYmD,EAAZnD,aAAcC,GAAekD,EAAflD,gBAAiBhC,GAAIkF,EAAJlF,KAAMkC,GAAYgD,EAAZhD,aAAcC,GAAe+C,EAAf/C,gBAGrDoC,GAAa,eAAAa,EAAA5N,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA0N,EAAAxN,EAAA,OAAAL,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACf6J,GAAa,CAAD/J,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,iBASE,OATFR,EAAAC,KAAA,EAGTL,EAAS,CACba,QAAS,CACP8M,cAAc,UAADlC,OAAYrD,GAAKwF,SAIlCrO,GAAW,GAAMa,EAAAE,KAAA,EAEMQ,IAAM+M,IAAI,gBAADpC,OACdtB,GAAavC,KAC7B5H,GACA,KAAD,EAAA0N,EAAAtN,EAAAY,KAHOd,EAAIwN,EAAJxN,KAIR0P,EAAY1P,GACZX,GAAW,GAEXtB,EAAO0S,KAAK,YAAaxG,GAAavC,KAAKxH,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,SAE3C1B,EAAM,CACJ6B,MAAO,iBACPgB,YAAa,8BACbf,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WACT,yBAAAP,EAAAsB,OAAA,GAAA3B,EAAA,mBAEN,kBA9BkB,OAAAyN,EAAA7L,MAAA,KAAAC,UAAA,KAgCbgP,GAAW,eAAA5C,EAAApO,YAAAC,cAAAC,MAAG,SAAAmO,EAAO4C,GAAK,IAAA7Q,EAAAC,EAAAC,EAAA,OAAAL,cAAAM,MAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA7N,MAAA,UACZ,UAAduQ,EAAMC,MAAmBjB,EAAU,CAAA1B,EAAA7N,KAAA,SASjB,OARpBrC,EAAO0S,KAAK,cAAexG,GAAavC,KAAKuG,EAAA9N,KAAA,EAErCL,EAAS,CACba,QAAS,CACP,eAAgB,mBAChB8M,cAAc,UAADlC,OAAYrD,GAAKwF,SAGlCkC,EAAc,IAAI3B,EAAA7N,KAAA,EACKQ,IAAMC,KAC3B,eACA,CACE8K,QAASgE,EACTxB,OAAQlE,IAEVnK,GACA,KAAD,EAAAC,EAAAkO,EAAAnN,KAPOd,EAAID,EAAJC,KAQRjC,EAAO0S,KAAK,cAAezQ,GAC3B0P,EAAY,GAADnE,OAAAsF,YAAKxJ,GAAQ,CAAErH,KAAOiO,EAAA7N,KAAA,iBAAA6N,EAAA9N,KAAA,GAAA8N,EAAA7M,GAAA6M,EAAA,SAEjCzP,EAAM,CACJ6B,MAAO,iBACPgB,YAAa,6BACbf,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WACT,yBAAAwN,EAAAzM,OAAA,GAAAuM,EAAA,mBAGR,gBAhCgBH,GAAA,OAAAE,EAAArM,MAAA,KAAAC,UAAA,KAkCjBkE,qBAAU,YACR7H,EAAS+S,YA3FI,2CA4FNL,KAAK,QAASvI,IACrBnK,EAAOgT,GAAG,aAAa,kBAAMjB,GAAmB,EAAK,IACrD/R,EAAOgT,GAAG,UAAU,kBAAMb,GAAY,EAAK,IAC3CnS,EAAOgT,GAAG,eAAe,kBAAMb,GAAY,EAAM,GAGnD,GAAG,IAEHtK,qBAAU,WACR6G,KAEAzO,EAAsBiM,EAExB,GAAG,CAACA,KAEJrE,qBAAU,WACR7H,EAAOgT,GAAG,oBAAoB,SAACC,GAE1BhT,GACDA,EAAoB0J,MAAQsJ,EAAmBC,KAAKvJ,IAOpDgI,EAAY,GAADnE,OAAAsF,YAAKxJ,GAAQ,CAAE2J,KALrB5G,GAAa8G,SAASF,KACzB3G,GAAgB,CAAC2G,GAAkBzF,OAAAsF,YAAKzG,MACxCuC,GAAeD,GAKrB,GACF,IAEA,IIhG8B3E,GAAYC,GJqH1C,OACE9F,cAAAsG,WAAA,CAAA1G,SACGmI,GACCtI,eAAA6G,WAAA,CAAA1G,SAAA,CACEH,eAAC+E,IAAI,CACHC,SAAU,CAAE+B,KAAM,OAAQgB,GAAI,QAC9B4F,GAAI,EACJtD,GAAI,EACJ1F,EAAE,OACFM,WAAW,YACXT,EAAE,OACFC,eAAgB,CAAEsC,KAAM,iBACxBW,WAAW,SAAQvH,SAAA,CAEnBI,cAACuG,IAAU,CACTtC,EAAG,CAAEuC,KAAM,OAAQgB,GAAI,QACvBf,KAAMzG,cAACiP,IAAa,IACpBlO,QAAS,kBAAMiH,GAAgB,GAAG,IAEnC7C,IACG4C,GAAamH,YAQbzP,eAAA6G,WAAA,CAAA1G,SAAA,CACGmI,GAAamE,SAASiD,cACvBnP,cAACsK,EAAoB,CACnBC,cAAeA,GACfC,WAAYA,EACZC,cAAeA,OAZnBhL,eAAA6G,WAAA,CAAA1G,SAAA,CACGgG,EAAUI,GAAM+B,GAAajC,OAC9B9F,cAAC+F,EAAY,CACXC,MI7IYH,GJ6IQG,GI7IIF,GJ6IEiC,GAAajC,MI5IhDA,GAAM,GAAGN,MAAQK,GAAWL,IAAMM,GAAM,GAAKA,GAAM,aJ0JpDrG,eAACuE,IAAG,CACFC,EAAE,OACFiD,QAAQ,SACRhD,eAAe,WACf3B,EAAG,EACH4B,GAAG,UACHC,EAAE,OACFtD,EAAE,OACFwD,aAAa,KACb8K,UAAU,SAAQxP,SAAA,CAEjB1C,EACC8C,cAACsN,IAAO,CACN5M,KAAK,KACL0D,EAAG,GACHtD,EAAG,GACHuO,UAAU,SACVC,OAAO,SAGTtP,cAAA,OAAKuP,UAAU,WAAU3P,SACvBI,cAACwI,EAAc,CAACrD,SAAUA,MAI9B1F,eAACI,IAAW,CACV2P,UAAWhB,GACX1O,GAAG,aACHC,YAAU,EACVkJ,GAAI,EAAErJ,SAAA,CAELmO,EACC/N,cAAA,OAAAJ,SACEI,cAACyP,IAAM,CACLC,QAASzB,EAETrN,MAAO,GACPK,MAAO,CAAE0O,aAAc,GAAIrG,WAAY,OAI3CtJ,cAAAsG,WAAA,IAEFtG,cAACE,IAAK,CACJkB,QAAQ,SACR+C,GAAG,UACH9D,YAAY,oBACZF,MAAOsN,EACPnN,SA3GQ,SAACC,GAGrB,GAFAmN,EAAcnN,EAAEC,OAAOL,OAElBwN,EAAL,CAEKE,IACHC,GAAU,GACVjS,EAAO0S,KAAK,SAAUxG,GAAavC,MAErC,IAAIoK,GAAiB,IAAIC,MAAOC,UAEhCC,YAAW,YACK,IAAIF,MAAOC,UACAF,GAHT,KAIe/B,IAC7BhS,EAAO0S,KAAK,cAAexG,GAAavC,KACxCsI,GAAU,GAEd,GARkB,IAPU,CAgB9B,aA+FM9N,cAACgE,IAAG,CAACC,EAAE,OAAOkD,WAAW,SAASjD,eAAe,SAASpD,EAAE,OAAMlB,SAChEI,cAACwE,IAAI,CAACC,SAAS,MAAM2I,GAAI,EAAG1I,WAAW,YAAW9E,SAAC,yCAO7D,EW9OeoQ,EAnBC,SAAHzS,GAAuC,IAAjCiN,EAAUjN,EAAViN,WAAYC,EAAalN,EAAbkN,cACrB1C,EAAiBH,IAAjBG,aAER,OACE/H,cAACgE,IAAG,CACFC,EAAG,CAAEuC,KAAMuB,EAAe,OAAS,OAAQP,GAAI,QAC/CL,WAAW,SACXD,QAAQ,SACR3E,EAAG,EACH4B,GAAG,QACHC,EAAG,CAAEoC,KAAM,OAAQgB,GAAI,OACvBlD,aAAa,KACbC,YAAY,MAAK3E,SAEjBI,cAACuN,EAAU,CAAC/C,WAAYA,EAAYC,cAAeA,KAGzD,E,QCAewF,EAnBK,WAClB,OACExQ,eAACyQ,IAAK,CAAAtQ,SAAA,CACJI,cAACmQ,IAAQ,CAACC,OAAO,SACjBpQ,cAACmQ,IAAQ,CAACC,OAAO,SACjBpQ,cAACmQ,IAAQ,CAACC,OAAO,SACjBpQ,cAACmQ,IAAQ,CAACC,OAAO,SACjBpQ,cAACmQ,IAAQ,CAACC,OAAO,SACjBpQ,cAACmQ,IAAQ,CAACC,OAAO,SACjBpQ,cAACmQ,IAAQ,CAACC,OAAO,SACjBpQ,cAACmQ,IAAQ,CAACC,OAAO,SACjBpQ,cAACmQ,IAAQ,CAACC,OAAO,SACjBpQ,cAACmQ,IAAQ,CAACC,OAAO,SACjBpQ,cAACmQ,IAAQ,CAACC,OAAO,SACjBpQ,cAACmQ,IAAQ,CAACC,OAAO,WAGvB,EC6KiBC,GA5KQ,SAAH9S,GAAsB,IAAhBqC,EAAQrC,EAARqC,SACxBqG,EAAoCC,cAA5BC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QACxBrK,EAA0CC,qBAAUC,EAAAC,YAAAH,EAAA,GAA7C0O,EAAaxO,EAAA,GAAEyO,EAAgBzO,EAAA,GACtCM,EAA0CP,mBAAS,IAAGQ,EAAAN,YAAAK,EAAA,GAA/C8T,EAAa7T,EAAA,GAAE8T,EAAgB9T,EAAA,GACtCG,EAA4BX,mBAAS,IAAGY,EAAAV,YAAAS,EAAA,GAAjCgO,EAAM/N,EAAA,GAAEgO,EAAShO,EAAA,GACxBG,EAAwCf,mBAAS,IAAGgB,EAAAd,YAAAa,EAAA,GAA7C8N,EAAY7N,EAAA,GAAE8N,EAAe9N,EAAA,GACpC0E,EAA8B1F,oBAAS,GAAM2F,EAAAzF,YAAAwF,EAAA,GAAtCzE,EAAO0E,EAAA,GAAEzE,EAAUyE,EAAA,GACpBtF,EAAQC,cAEd2O,EAAkCtD,IAA1B5B,EAAIkF,EAAJlF,KAAMoC,EAAK8C,EAAL9C,MAAOC,EAAQ6C,EAAR7C,SAiBf8C,EAAY,eAAAC,EAAA5N,YAAAC,cAAAC,MAAG,SAAAC,EAAO0N,GAAK,IAAAzN,EAAA0N,EAAAxN,EAAA,OAAAL,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACd,GAAjB2M,EAAUQ,GACLA,EAAM,CAADrN,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,iBAUP,OAVOR,EAAAC,KAAA,EAKRd,GAAW,GACLS,EAAS,CACba,QAAS,CACP8M,cAAc,UAADlC,OAAYrD,EAAKwF,SAEjCxN,EAAAE,KAAA,EACsBQ,IAAM+M,IAAI,oBAADpC,OAAqBuB,GAAUhN,GAAQ,KAAD,EAAA0N,EAAAtN,EAAAY,KAA9Dd,EAAIwN,EAAJxN,KACRuE,QAAQC,IAAIxE,GACZX,GAAW,GACX4N,EAAgBjN,GAAME,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,SAEtB1B,EAAM,CACJ6B,MAAO,iBACPgB,YAAa,oCACbf,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,gBACT,yBAAAP,EAAAsB,OAAA,GAAA3B,EAAA,mBAEN,gBA3BiB+N,GAAA,OAAAN,EAAA7L,MAAA,KAAAC,UAAA,KAiCZgR,EAAY,eAAA5E,EAAApO,YAAAC,cAAAC,MAAG,SAAAmO,IAAA,IAAAjO,EAAAC,EAAAC,EAAA,OAAAL,cAAAM,MAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA7N,MAAA,UACdwM,GAAkB4F,EAAa,CAAAvE,EAAA7N,KAAA,QAO/B,OANH5B,EAAM,CACJ6B,MAAO,6BACPC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,QACTwN,EAAAvN,OAAA,iBASF,OATEuN,EAAA9N,KAAA,EAKGL,EAAS,CACba,QAAS,CACP8M,cAAc,UAADlC,OAAYrD,EAAKwF,SAEjCO,EAAA7N,KAAA,EACsBQ,IAAMC,KAAK,kBAEhC,CACE4C,KAAMmJ,EACN5E,MAAO/G,KAAKC,UAAUsR,EAAc5H,KAAI,SAACgE,GAAC,OAAKA,EAAElH,GAAG,MAEtD5H,GACA,KAAD,EAAAC,EAAAkO,EAAAnN,KAPOd,EAAID,EAAJC,KAQRuK,EAAS,CAACvK,GAAIuL,OAAAsF,YAAKvG,KACnB/B,IACA/J,EAAM,CACJ6B,MAAO,0BACPC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WACTwN,EAAA7N,KAAA,iBAAA6N,EAAA9N,KAAA,GAAA8N,EAAA7M,GAAA6M,EAAA,SAEHzP,EAAM,CACJ6B,MAAO,6BACPgB,YAAa4M,EAAA7M,GAAME,SAAStB,KAC5BM,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WACT,yBAAAwN,EAAAzM,OAAA,GAAAuM,EAAA,mBAEN,kBA7CiB,OAAAD,EAAArM,MAAA,KAAAC,UAAA,KA+ClB,OACEC,eAAA6G,WAAA,CAAA1G,SAAA,CACEI,cAAA,QAAMe,QAASqF,EAAOxG,SAAEA,IAExBH,eAACkH,IAAK,CAACN,QAASA,EAASF,OAAQA,EAAQS,YAAU,EAAAhH,SAAA,CACjDI,cAAC6G,IAAY,IACbpH,eAACqH,IAAY,CAAAlH,SAAA,CACXI,cAAC+G,IAAW,CACVtC,SAAS,OACTC,WAAW,YACXT,EAAE,OACFC,eAAe,SAAQtE,SACxB,sBAGDI,cAACgH,IAAgB,IACjBvH,eAACwH,IAAS,CAAChD,EAAE,OAAOiD,QAAQ,SAASC,WAAW,SAAQvH,SAAA,CACtDI,cAACH,IAAW,CAAAD,SACVI,cAACE,IAAK,CACJG,YAAY,YACZyE,GAAI,EACJxE,SAAU,SAACC,GAAC,OAAKoK,EAAiBpK,EAAEC,OAAOL,MAAM,MAGrDH,cAACH,IAAW,CAAAD,SACVI,cAACE,IAAK,CACJG,YAAY,mCACZyE,GAAI,EACJxE,SAAU,SAACC,GAAC,OAAK4K,EAAa5K,EAAEC,OAAOL,MAAM,MAGjDH,cAACgE,IAAG,CAACI,EAAE,OAAOH,EAAE,OAAOkJ,SAAS,OAAMvN,SACnC0Q,EAAc5H,KAAI,SAACgE,GAAC,OACnB1M,cAAC0J,EAAa,CAEZ1D,KAAM0G,EACN/C,eAAgB,kBAvFV8G,EAuF6B/D,OAtFjD6D,EAAiBD,EAAcI,QAAO,SAACC,GAAG,OAAKA,EAAInL,MAAQiL,EAAQjL,GAAG,KADnD,IAACiL,CAuF+B,GAFhC/D,EAAElH,IAGP,MAGLtI,EAEC8C,cAAA,OAAAJ,SAAK,eAEO,OAAZkL,QAAY,IAAZA,OAAY,EAAZA,EACI8F,MAAM,EAAG,GACVlI,KAAI,SAAC1C,GAAI,OACRhG,cAACkK,EAAY,CAEXlE,KAAMA,EACN2D,eAAgB,kBAjJbkH,EAiJ+B7K,OAhJ9CsK,EAActB,SAAS6B,GACzBvU,EAAM,CACJ6B,MAAO,qBACPC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,QAKdgS,EAAiB,GAADlH,OAAAsF,YAAK2B,GAAa,CAAEO,MAZlB,IAACA,CAiJoC,GAFlC7K,EAAKR,IAGV,OAIVxF,cAACyH,IAAW,CAAA7H,SACVI,cAACa,IAAM,CAACE,QAASyP,EAAcxP,YAAY,OAAMpB,SAAC,0BAQ9D,ECjEakR,GAnHC,SAAHvT,GAAwB,IAAlBiN,EAAUjN,EAAViN,WACjBxO,EAAoCC,qBAAUC,EAAAC,YAAAH,EAAA,GAAvC6J,EAAU3J,EAAA,GAAE6U,EAAa7U,EAAA,GAEhCgP,EAAiEtD,IAAzDG,EAAYmD,EAAZnD,aAAcC,EAAekD,EAAflD,gBAAiBhC,EAAIkF,EAAJlF,KAAMoC,EAAK8C,EAAL9C,MAAOC,EAAQ6C,EAAR7C,SAE9C/L,EAAQC,cAERyU,EAAU,eAAA5F,EAAA5N,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA0N,EAAAxN,EAAA,OAAAL,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAOd,OAPcF,EAAAC,KAAA,EAGTL,EAAS,CACba,QAAS,CACP8M,cAAc,UAADlC,OAAYrD,EAAKwF,SAEjCxN,EAAAE,KAAA,EAEsBQ,IAAM+M,IAAI,YAAa7N,GAAQ,KAAD,EAAA0N,EAAAtN,EAAAY,KAA7Cd,EAAIwN,EAAJxN,KACRuK,EAASvK,GAAME,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAkB,GAAAlB,EAAA,SAEf1B,EAAM,CACJ6B,MAAO,iBACPgB,YAAa,2BACbf,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,gBACT,yBAAAP,EAAAsB,OAAA,GAAA3B,EAAA,kBAEN,kBArBe,OAAAyN,EAAA7L,MAAA,KAAAC,UAAA,KA6BhB,OANAkE,qBAAU,WACRqN,EAAchS,KAAK4E,MAAM9E,aAAa+E,QAAQ,cAC9CoN,GAEF,GAAG,CAACxG,IAGF/K,eAACuE,IAAG,CACFC,EAAG,CAAEuC,KAAMuB,EAAe,OAAS,OAAQP,GAAI,QAC/CN,QAAQ,SACRC,WAAW,SACX5E,EAAG,EACH4B,GAAG,QACHC,EAAG,CAAEoC,KAAM,OAAQgB,GAAI,OACvBlD,aAAa,KACbC,YAAY,MAAK3E,SAAA,CAEjBH,eAACuE,IAAG,CACFoJ,GAAI,EACJtD,GAAI,EACJrF,SAAU,CAAE+B,KAAM,OAAQgB,GAAI,QAC9B9C,WAAW,YACXT,EAAE,OACFG,EAAE,OACFF,eAAe,gBACfiD,WAAW,SAAQvH,SAAA,CACpB,WAECI,cAACqQ,GAAc,CAAAzQ,SACbI,cAACa,IAAM,CACLoD,EAAE,OACFQ,SAAU,CAAE+B,KAAM,OAAQgB,GAAI,OAAQyJ,GAAI,QAC1CC,UAAWlR,cAACmR,IAAO,IAAIvR,SACxB,wBAKLI,cAACgE,IAAG,CACFC,EAAE,OACFiD,QAAQ,SACR3E,EAAG,EACH4B,GAAG,UACHC,EAAE,OACFtD,EAAE,OACFwD,aAAa,KACb8K,UAAU,SAAQxP,SAEjBwI,EACCpI,cAACkQ,IAAK,CAACd,UAAU,SAAQxP,SACtBwI,EAAMM,KAAI,SAACqG,GAAI,OACdtP,eAACuE,IAAG,CACFjD,QAAS,kBAAMiH,EAAgB+G,EAAK,EACpC5F,OAAO,UACPhF,GAAI4D,IAAiBgH,EAAO,UAAY,UACxC1E,MAAOtC,IAAiBgH,EAAO,QAAU,QACzCjF,GAAI,EACJC,GAAI,EACJzF,aAAa,KAAI1E,SAAA,CAGjBI,cAACwE,IAAI,CAAA5E,SACDmP,EAAKG,YAEHH,EAAK7C,SADLtG,EAAUC,EAAYkJ,EAAKjJ,SAGhCiJ,EAAKqC,eACJ3R,eAAC+E,IAAI,CAACC,SAAS,KAAI7E,SAAA,CACjBH,eAAA,KAAAG,SAAA,CAAImP,EAAKqC,cAAc7L,OAAOhE,KAAK,SAClCwN,EAAKqC,cAAc3H,QAAQnE,OAAS,GACjCyJ,EAAKqC,cAAc3H,QAAQ4H,UAAU,EAAG,IAAM,MAC9CtC,EAAKqC,cAAc3H,aAZtBsF,EAAKvJ,IAeN,MAIVxF,cAACiQ,EAAW,QAKtB,E,8BCqGeqB,OA/Lf,WACE,IAAAtV,EAA4BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAjC4O,EAAM1O,EAAA,GAAE2O,EAAS3O,EAAA,GACxBM,EAAwCP,mBAAS,IAAGQ,EAAAN,YAAAK,EAAA,GAA7CsO,EAAYrO,EAAA,GAAEsO,EAAetO,EAAA,GACpCG,EAA8BX,oBAAS,GAAMY,EAAAV,YAAAS,EAAA,GAAtCM,EAAOL,EAAA,GAAEM,EAAUN,EAAA,GAC1BG,EAAsCf,oBAAS,GAAMgB,EAAAd,YAAAa,EAAA,GAA9CuU,EAAWtU,EAAA,GAAEuU,EAAcvU,EAAA,GAElCiO,EAOItD,IANFI,EAAekD,EAAflD,gBACAhC,EAAIkF,EAAJlF,KACAkC,EAAYgD,EAAZhD,aACAC,EAAe+C,EAAf/C,gBACAC,EAAK8C,EAAL9C,MACAC,EAAQ6C,EAAR7C,SAGI/L,EAAQC,cACd0J,EAAoCC,cAA5BC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QAClBjJ,EAAUC,cAOV8N,EAAY,eAAA5N,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA0N,EAAAxN,EAAA,OAAAL,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACd0M,EAAO,CAAD5M,EAAAE,KAAA,QAON,OANH5B,EAAM,CACJ6B,MAAO,mCACPC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,aACTP,EAAAQ,OAAA,iBAWF,OAXER,EAAAC,KAAA,EAKHd,GAAW,GAELS,EAAS,CACba,QAAS,CACP8M,cAAc,UAADlC,OAAYrD,EAAKwF,SAEjCxN,EAAAE,KAAA,EAEsBQ,IAAM+M,IAAI,oBAADpC,OAAqBuB,GAAUhN,GAAQ,KAAD,EAAA0N,EAAAtN,EAAAY,KAA9Dd,EAAIwN,EAAJxN,KAERX,GAAW,GACX4N,EAAgBjN,GAAME,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,SAEtB1B,EAAM,CACJ6B,MAAO,iBACPgB,YAAa,oCACbf,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,gBACT,yBAAAP,EAAAsB,OAAA,GAAA3B,EAAA,mBAEN,kBAnCiB,OAAAJ,EAAAgC,MAAA,KAAAC,UAAA,KAqCZiS,EAAU,eAAArG,EAAA5N,YAAAC,cAAAC,MAAG,SAAAmO,EAAOxG,GAAM,IAAAzH,EAAAC,EAAAC,EAAA,OAAAL,cAAAM,MAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA7N,MAAA,OAU3B,OATHmE,QAAQC,IAAI+C,GAAQ0G,EAAA9N,KAAA,EAGlBuT,GAAe,GACT5T,EAAS,CACba,QAAS,CACP,eAAgB,mBAChB8M,cAAc,UAADlC,OAAYrD,EAAKwF,SAEjCO,EAAA7N,KAAA,EACsBQ,IAAMC,KAAK,YAAa,CAAE0G,UAAUzH,GAAQ,KAAD,EAAAC,EAAAkO,EAAAnN,KAA1Dd,EAAID,EAAJC,KAEHsK,EAAMqE,MAAK,SAACiF,GAAC,OAAKA,EAAElM,MAAQ1H,EAAK0H,GAAG,KAAG6C,EAAS,CAACvK,GAAIuL,OAAAsF,YAAKvG,KAC/DJ,EAAgBlK,GAChB0T,GAAe,GACfnL,IAAU0F,EAAA7N,KAAA,iBAAA6N,EAAA9N,KAAA,GAAA8N,EAAA7M,GAAA6M,EAAA,SAEVzP,EAAM,CACJ6B,MAAO,0BACPgB,YAAa4M,EAAA7M,GAAMG,QACnBjB,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,gBACT,yBAAAwN,EAAAzM,OAAA,GAAAuM,EAAA,mBAEN,gBA3BeH,GAAA,OAAAN,EAAA7L,MAAA,KAAAC,UAAA,KA6BhB,OACEC,eAAA6G,WAAA,CAAA1G,SAAA,CACEH,eAACuE,IAAG,CACFC,EAAE,OACFC,eAAe,gBACfiD,WAAW,SACXhD,GAAG,QACHC,EAAE,OACF7B,EAAE,oBACFgC,YAAY,MAAK3E,SAAA,CAEjBI,cAAC4I,IAAO,CAACC,MAAM,uBAAuBE,UAAQ,EAACD,UAAU,aAAYlJ,SACnEH,eAACoB,IAAM,CAACO,QAAQ,QAAQL,QAASqF,EAAOxG,SAAA,CACtCI,cAAA,KAAGuP,UAAU,kBACbvP,cAACwE,IAAI,CAACP,EAAG,CAAEuC,KAAM,OAAQgB,GAAI,QAAUsC,GAAI,EAAElK,SAAC,qBAKlDI,cAACwE,IAAI,CAACC,SAAS,MAAMC,WAAW,YAAW9E,SAAC,wCAG5CH,eAAA,OAAAG,SAAA,CACEH,eAACkS,KAAI,CAAA/R,SAAA,CACHH,eAACmS,KAAU,CAACrP,EAAG,EAAE3C,SAAA,CACfI,cAAC6R,KAAiB,CAChBC,MAAO5J,EAAa5C,OACpByM,OAAQC,UAAOC,QAEjBjS,cAACkS,IAAQ,CAACzN,SAAS,MAAMJ,EAAG,OAE9B5E,eAAC0S,KAAQ,CAAClI,GAAI,EAAErK,SAAA,EACZsI,EAAa5C,QAAU,kBACxB4C,EAAaQ,KAAI,SAAC0J,GAAK,OACtBpS,cAACqS,KAAQ,CAEPtR,QAAS,WACPiH,EAAgBoK,EAAMrD,MACtB5G,EAAgBD,EAAawI,QAAO,SAAC4B,GAAC,OAAKA,IAAMF,CAAK,IACxD,EAAExS,SAEDwS,EAAMrD,KAAKG,YAAW,kBAAA7F,OACD+I,EAAMrD,KAAK7C,UAAQ,oBAAA7C,OACjBzD,EAAUI,EAAMoM,EAAMrD,KAAKjJ,SAR9CsM,EAAM5M,IASF,UAIjB/F,eAACkS,KAAI,CAAA/R,SAAA,CACHI,cAAC4R,KAAU,CAACW,GAAI1R,IAAQsD,GAAG,QAAQ+M,UAAWlR,cAACwS,IAAe,IAAI5S,SAChEI,cAACgJ,IAAM,CACLtI,KAAK,KACLyI,OAAO,UACP5H,KAAMyE,EAAKzE,KACX+F,IAAKtB,EAAKjE,QAGdtC,eAAC0S,KAAQ,CAAAvS,SAAA,CACPH,eAACsG,EAAY,CAACC,KAAMA,EAAKpG,SAAA,CACvBI,cAACqS,KAAQ,CAAAzS,SAAC,eAAsB,OAElCI,cAACyS,KAAW,IACZzS,cAACqS,KAAQ,CAACtR,QArIA,WACpBlC,aAAa6T,WAAW,YACxBtV,EAAQ6B,KAAK,IACf,EAkI6CW,SAAC,uBAM1CH,eAACkT,IAAM,CAAC7J,UAAU,OAAOzC,QAASA,EAASF,OAAQA,EAAOvG,SAAA,CACxDI,cAAC4S,IAAa,IACdnT,eAACoT,IAAa,CAAAjT,SAAA,CACZI,cAAC8S,IAAY,CAACC,kBAAkB,MAAKnT,SAAC,iBACtCH,eAACuT,IAAU,CAAApT,SAAA,CACTH,eAACuE,IAAG,CAACC,EAAE,OAAOmJ,GAAI,EAAExN,SAAA,CAClBI,cAACE,IAAK,CACJG,YAAY,0BACZ6I,GAAI,EACJ/I,MAAOyK,EACPtK,SAAU,SAACC,GAAC,OAAKsK,EAAUtK,EAAEC,OAAOL,MAAM,IAE5CH,cAACa,IAAM,CAACE,QAASoK,EAAavL,SAAC,UAEhC1C,EACC8C,cAACiQ,EAAW,IAEA,OAAZnF,QAAY,IAAZA,OAAY,EAAZA,EAAcpC,KAAI,SAAC1C,GAAI,OACrBhG,cAACkK,EAAY,CAEXlE,KAAMA,EACN2D,eAAgB,kBAAM8H,EAAWzL,EAAKR,IAAI,GAFrCQ,EAAKR,IAGV,IAGL+L,GAAevR,cAACsN,IAAO,CAACD,GAAG,OAAOpJ,EAAE,oBAMjD,ECtMegP,GAjBE,WACf,IAAAjX,EAAoCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA5CwO,EAAUtO,EAAA,GAAEuO,EAAavO,EAAA,GACxB8J,EAAS4B,IAAT5B,KAER,OACEvG,eAAA,OAAKwB,MAAO,CAAEL,MAAO,QAAShB,SAAA,CAC3BoG,GAAQhG,cAACsR,GAAU,IACpB7R,eAACuE,IAAG,CAACC,EAAE,OAAOC,eAAe,gBAAgBE,EAAE,OAAOtD,EAAE,SAASyB,EAAE,OAAM3C,SAAA,CACtEoG,GAAQhG,cAAC8Q,GAAO,CAACtG,WAAYA,IAC7BxE,GACChG,cAACgQ,EAAO,CAACxF,WAAYA,EAAYC,cAAeA,SAK1D,ECPeyI,OAVf,WAEE,OACEzT,eAAA,OAAK8P,UAAU,MAAK3P,SAAA,CAClBI,cAACmT,IAAK,CAACC,KAAK,IAAIC,UAAW5P,EAAU6P,OAAK,IAC1CtT,cAACmT,IAAK,CAACC,KAAK,SAASC,UAAWJ,OAGtC,ECFiBM,GAZO,SAAAC,GAChBA,GAAeA,aAAuBC,UACxC,8BAAqBzQ,MAAK,SAAAzF,GAAkD,IAA/CmW,EAAMnW,EAANmW,OAAQC,EAAMpW,EAANoW,OAAQC,EAAMrW,EAANqW,OAAQC,EAAMtW,EAANsW,OAAQC,EAAOvW,EAAPuW,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACV,GAEJ,E,kBCDFO,IAASC,OACPhU,cAACiU,KAAc,CAAArU,SACbI,cAACkU,KAAa,CAAAtU,SACZI,cAAC8H,EAAY,CAAAlI,SACXI,cAACkT,GAAG,UAIViB,SAASC,eAAe,SAM1Bb,I","file":"static/js/main.a7c3873a.chunk.js","sourcesContent":["import { FormControl } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../animations/typing.json\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\r\nimport { ChatState } from \"../context/ChatProvider\";\r\nconst ENDPOINT = \"https://chat-server-w8on.onrender.com/\"; \r\n// const ENDPOINT = \"http://localhost:5000/\";\r\nvar socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\r\n    ChatState();\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (event) => {\r\n    if (event.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat,\r\n          },\r\n          config\r\n        );\r\n        socket.emit(\"new message\", data);\r\n        setMessages([...messages, data]);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to send the Message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n\r\n    selectedChatCompare = selectedChat;\r\n    // eslint-disable-next-line\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n      }\r\n    });\r\n  });\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              d={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {messages &&\r\n              (!selectedChat.isGroupChat ? (\r\n                <>\r\n                  {getSender(user, selectedChat.users)}\r\n                  <ProfileModal\r\n                    user={getSenderFull(user, selectedChat.users)}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {selectedChat.chatName.toUpperCase()}\r\n                  <UpdateGroupChatModal\r\n                    fetchMessages={fetchMessages}\r\n                    fetchAgain={fetchAgain}\r\n                    setFetchAgain={setFetchAgain}\r\n                  />\r\n                </>\r\n              ))}\r\n          </Text>\r\n          <Box\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <Spinner\r\n                size=\"xl\"\r\n                w={20}\r\n                h={20}\r\n                alignSelf=\"center\"\r\n                margin=\"auto\"\r\n              />\r\n            ) : (\r\n              <div className=\"messages\">\r\n                <ScrollableChat messages={messages} />\r\n              </div>\r\n            )}\r\n\r\n            <FormControl\r\n              onKeyDown={sendMessage}\r\n              id=\"first-name\"\r\n              isRequired\r\n              mt={3}\r\n            >\r\n              {istyping ? (\r\n                <div>\r\n                  <Lottie\r\n                    options={defaultOptions}\r\n                    // height={50}\r\n                    width={70}\r\n                    style={{ marginBottom: 15, marginLeft: 0 }}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"#E0E0E0\"\r\n                placeholder=\"Enter a message..\"\r\n                value={newMessage}\r\n                onChange={typingHandler}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        // to get socket.io on same page\r\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n            Click on a user to start chatting\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;","import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!email || !password) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // console.log(email, password);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/user/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      // console.log(JSON.stringify(data));\r\n      toast({\r\n        title: \"Login Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"10px\">\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email Address</FormLabel>\r\n        <Input\r\n          value={email}\r\n          type=\"email\"\r\n          placeholder=\"Enter Your Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter password\"\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n      >\r\n        Login\r\n      </Button>\r\n      <Button\r\n        variant=\"solid\"\r\n        colorScheme=\"red\"\r\n        width=\"100%\"\r\n        onClick={() => {\r\n          setEmail(\"guest@example.com\");\r\n          setPassword(\"123456\");\r\n        }}\r\n      >\r\n        Get Guest User Credentials\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Login;","import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Signup = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [confirmpassword, setConfirmpassword] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [picLoading, setPicLoading] = useState(false);\r\n\r\n  const submitHandler = async () => {\r\n    setPicLoading(true);\r\n    if (!name || !email || !password || !confirmpassword) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords Do Not Match\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(name, email, password, pic);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/user\",\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n          pic,\r\n        },\r\n        config\r\n      );\r\n      console.log(data);\r\n      toast({\r\n        title: \"Registration Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setPicLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n    }\r\n  };\r\n\r\n  const postDetails = (pics) => {\r\n    setPicLoading(true);\r\n    if (pics === undefined) {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(pics);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\"||pics.type === \"image/jpg\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"chit-chat\");\r\n      data.append(\"cloud_name\", \"dfmn9ter5\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dfmn9ter5/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          console.log(data.url.toString());\r\n          setPicLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setPicLoading(false);\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\">\r\n      <FormControl id=\"first-name\" isRequired>\r\n        <FormLabel>Name</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email Address</FormLabel>\r\n        <Input\r\n          type=\"email\"\r\n          placeholder=\"Enter Your Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Confirm Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Confirm password\"\r\n            onChange={(e) => setConfirmpassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"pic\">\r\n        <FormLabel>Upload your Picture</FormLabel>\r\n        <Input\r\n          type=\"file\"\r\n          p={1.5}\r\n          accept=\"image/*\"\r\n          onChange={(e) => postDetails(e.target.files[0])}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={picLoading}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n\r\n\r\n\r\n// https://api.cloudinary.com/v1_1/dfmn9ter5/image/upload","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Login from \"../components/Authentication/Login\";\r\nimport Signup from \"../components/Authentication/Signup\";\r\n\r\nconst Homepage=()=> {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    if (user) history.push(\"/chats\");\r\n  }, [history]);\r\n\r\n  return (\r\n    <Container maxW=\"xl\" centerContent>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"center\"\r\n        p={3}\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        m=\"40px 0 15px 0\"\r\n        borderRadius=\"lg\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\r\n          Chit😉 - Chat🙂\r\n        </Text>\r\n      </Box>\r\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\r\n        <Tabs isFitted variant=\"soft-rounded\">\r\n          <TabList mb=\"1em\">\r\n            <Tab>Login</Tab>\r\n            <Tab>Sign Up</Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Login />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Signup />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Homepage;","export const isSameSenderMargin = (messages, m, i, userId) => {\r\n    // console.log(i === messages.length - 1);\r\n  \r\n    if (\r\n      i < messages.length - 1 &&\r\n      messages[i + 1].sender._id === m.sender._id &&\r\n      messages[i].sender._id !== userId\r\n    )\r\n      return 33;\r\n    else if (\r\n      (i < messages.length - 1 &&\r\n        messages[i + 1].sender._id !== m.sender._id &&\r\n        messages[i].sender._id !== userId) ||\r\n      (i === messages.length - 1 && messages[i].sender._id !== userId)\r\n    )\r\n      return 0;\r\n    else return \"auto\";\r\n  };\r\n  \r\n  export const isSameSender = (messages, m, i, userId) => {\r\n    return (\r\n      i < messages.length - 1 &&\r\n      (messages[i + 1].sender._id !== m.sender._id ||\r\n        messages[i + 1].sender._id === undefined) &&\r\n      messages[i].sender._id !== userId\r\n    );\r\n  };\r\n  \r\n  export const isLastMessage = (messages, i, userId) => {\r\n    return (\r\n      i === messages.length - 1 &&\r\n      messages[messages.length - 1].sender._id !== userId &&\r\n      messages[messages.length - 1].sender._id\r\n    );\r\n  };\r\n  \r\n  export const isSameUser = (messages, m, i) => {\r\n    return i > 0 && messages[i - 1].sender._id === m.sender._id;\r\n  };\r\n  \r\n  export const getSender = (loggedUser, users) => {\r\n    return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\r\n  };\r\n  \r\n  export const getSenderFull = (loggedUser, users) => {\r\n    return users[0]._id === loggedUser._id ? users[1] : users[0];\r\n  };","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  IconButton,\r\n  Text,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst ProfileModal = ({ user, children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      {children ? (\r\n        <span onClick={onOpen}>{children}</span>\r\n      ) : (\r\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n      )}\r\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent h=\"410px\">\r\n          <ModalHeader\r\n            fontSize=\"40px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {user.name}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Image\r\n              borderRadius=\"full\"\r\n              boxSize=\"150px\"\r\n              src={user.pic}\r\n              alt={user.name}\r\n            />\r\n            <Text\r\n              fontSize={{ base: \"28px\", md: \"30px\" }}\r\n              fontFamily=\"Work sans\"\r\n            >\r\n              Email: {user.email}\r\n            </Text>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={onClose}>Close</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileModal;","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n  const [selectedChat, setSelectedChat] = useState();\r\n  const [user, setUser] = useState();\r\n  const [notification, setNotification] = useState([]);\r\n  const [chats, setChats] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    setUser(userInfo);\r\n\r\n    if (!userInfo) history.push(\"/\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [history]);\r\n\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        selectedChat,\r\n        setSelectedChat,\r\n        user,\r\n        setUser,\r\n        notification,\r\n        setNotification,\r\n        chats,\r\n        setChats,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport const ChatState = () => {\r\n  return useContext(ChatContext);\r\n};\r\n\r\nexport default ChatProvider;","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport {\r\n  isLastMessage,\r\n  isSameSender,\r\n  isSameSenderMargin,\r\n  isSameUser,\r\n} from \"../config/ChatLogics\";\r\nimport { ChatState } from \"../context/ChatProvider\";\r\n\r\nconst ScrollableChat = ({ messages }) => {\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <ScrollableFeed>\r\n      {messages &&\r\n        messages.map((m, i) => (\r\n          <div style={{ display: \"flex\" }} key={m._id}>\r\n            {(isSameSender(messages, m, i, user._id) ||\r\n              isLastMessage(messages, i, user._id)) && (\r\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\r\n                <Avatar\r\n                  mt=\"7px\"\r\n                  mr={1}\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={m.sender.name}\r\n                  src={m.sender.pic}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n            <span\r\n              style={{\r\n                backgroundColor: `${\r\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n                }`,\r\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\r\n                borderRadius: \"20px\",\r\n                padding: \"5px 15px\",\r\n                maxWidth: \"75%\",\r\n              }}\r\n            >\r\n              {m.content}\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </ScrollableFeed>\r\n  );\r\n};\r\n\r\nexport default ScrollableChat;","import { CloseIcon } from \"@chakra-ui/icons\";\r\nimport { Badge } from \"@chakra-ui/layout\";\r\n\r\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\r\n  return (\r\n    <Badge\r\n      px={2}\r\n      py={1}\r\n      borderRadius=\"lg\"\r\n      m={1}\r\n      mb={2}\r\n      variant=\"solid\"\r\n      fontSize={12}\r\n      colorScheme=\"purple\"\r\n      cursor=\"pointer\"\r\n      onClick={handleFunction}\r\n    >\r\n      {user.name}\r\n      {admin === user._id && <span> (Admin)</span>}\r\n      <CloseIcon pl={1} />\r\n    </Badge>\r\n  );\r\n};\r\n\r\nexport default UserBadgeItem;","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\n// import { ChatState } from \"../../context/ChatProvider\";\r\n\r\nconst UserListItem = ({user, handleFunction }) => {\r\n  // const { user } = ChatState();\r\n\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      cursor=\"pointer\"\r\n      bg=\"#E8E8E8\"\r\n      _hover={{\r\n        background: \"#38B2AC\",\r\n        color: \"white\",\r\n      }}\r\n      w=\"100%\"\r\n      d=\"flex\"\r\n      alignItems=\"center\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={2}\r\n      borderRadius=\"lg\"\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={user.name}\r\n        src={user.pic}\r\n      />\r\n      <Box>\r\n        <Text>{user.name}</Text>\r\n        <Text fontSize=\"xs\">\r\n          <b>Email : </b>\r\n          {user.email}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserListItem;","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n  IconButton,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\n\r\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [renameloading, setRenameLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { selectedChat, setSelectedChat, user } = ChatState();\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRename = async () => {\r\n    if (!groupChatName) return;\r\n\r\n    try {\r\n      setRenameLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/rename`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          chatName: groupChatName,\r\n        },\r\n        config\r\n      );\r\n\r\n      console.log(data._id);\r\n      // setSelectedChat(\"\");\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setRenameLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setRenameLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleAddUser = async (user1) => {\r\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\r\n      toast({\r\n        title: \"User Already in group!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selectedChat.groupAdmin._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can add someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/groupadd`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleRemove = async (user1) => {\r\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can remove someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/groupremove`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      fetchMessages();\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {selectedChat.chatName}\r\n          </ModalHeader>\r\n\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\r\n              {selectedChat.users.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  admin={selectedChat.groupAdmin}\r\n                  handleFunction={() => handleRemove(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            <FormControl d=\"flex\">\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                value={groupChatName}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n              <Button\r\n                variant=\"solid\"\r\n                colorScheme=\"teal\"\r\n                ml={1}\r\n                isLoading={renameloading}\r\n                onClick={handleRename}\r\n              >\r\n                Update\r\n              </Button>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add User to group\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n\r\n            {loading ? (\r\n              <Spinner size=\"lg\" />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => handleAddUser(user)}\r\n                />\r\n              ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\r\n              Leave Group\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateGroupChatModal;","import { Box } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport SingleChat from \"./SingleChat\";\r\nimport { ChatState } from \"../context/ChatProvider\";\r\n\r\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\r\n  const { selectedChat } = ChatState();\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\r\n      alignItems=\"center\"\r\n      flexDir=\"column\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"68%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chatbox;","import { Stack } from \"@chakra-ui/layout\";\r\nimport { Skeleton } from \"@chakra-ui/skeleton\";\r\n\r\nconst ChatLoading = () => {\r\n  return (\r\n    <Stack>\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ChatLoading;","import {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n    useDisclosure,\r\n    FormControl,\r\n    Input,\r\n    useToast,\r\n    Box,\r\n  } from \"@chakra-ui/react\";\r\n  import axios from \"axios\";\r\n  import { useState } from \"react\";\r\n  import { ChatState } from \"../../context/ChatProvider\";\r\n  import UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\n  import UserListItem from \"../userAvatar/UserListItem\";\r\n  \r\n  const GroupChatModal = ({ children }) => {\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [groupChatName, setGroupChatName] = useState();\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [searchResult, setSearchResult] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const toast = useToast();\r\n  \r\n    const { user, chats, setChats } = ChatState();\r\n  \r\n    const handleGroup = (userToAdd) => {\r\n      if (selectedUsers.includes(userToAdd)) {\r\n        toast({\r\n          title: \"User already added\",\r\n          status: \"warning\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"top\",\r\n        });\r\n        return;\r\n      }\r\n  \r\n      setSelectedUsers([...selectedUsers, userToAdd]);\r\n    };\r\n  \r\n    const handleSearch = async (query) => {\r\n      setSearch(query);\r\n      if (!query) {\r\n        return;\r\n      }\r\n  \r\n      try {\r\n        setLoading(true);\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n        console.log(data);\r\n        setLoading(false);\r\n        setSearchResult(data);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to Load the Search Results\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom-left\",\r\n        });\r\n      }\r\n    };\r\n  \r\n    const handleDelete = (delUser) => {\r\n      setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\r\n    };\r\n  \r\n    const handleSubmit = async () => {\r\n      if (!groupChatName || !selectedUsers) {\r\n        toast({\r\n          title: \"Please fill all the feilds\",\r\n          status: \"warning\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"top\",\r\n        });\r\n        return;\r\n      }\r\n  \r\n      try {\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        const { data } = await axios.post(\r\n          `/api/chat/group`,\r\n          {\r\n            name: groupChatName,\r\n            users: JSON.stringify(selectedUsers.map((u) => u._id)),\r\n          },\r\n          config\r\n        );\r\n        setChats([data, ...chats]);\r\n        onClose();\r\n        toast({\r\n          title: \"New Group Chat Created!\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Failed to Create the Chat!\",\r\n          description: error.response.data,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <span onClick={onOpen}>{children}</span>\r\n  \r\n        <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader\r\n              fontSize=\"35px\"\r\n              fontFamily=\"Work sans\"\r\n              d=\"flex\"\r\n              justifyContent=\"center\"\r\n            >\r\n              Create Group Chat\r\n            </ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n              <FormControl>\r\n                <Input\r\n                  placeholder=\"Chat Name\"\r\n                  mb={3}\r\n                  onChange={(e) => setGroupChatName(e.target.value)}\r\n                />\r\n              </FormControl>\r\n              <FormControl>\r\n                <Input\r\n                  placeholder=\"Add Users eg: John, Vibhor, Jane\"\r\n                  mb={1}\r\n                  onChange={(e) => handleSearch(e.target.value)}\r\n                />\r\n              </FormControl>\r\n              <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\r\n                {selectedUsers.map((u) => (\r\n                  <UserBadgeItem\r\n                    key={u._id}\r\n                    user={u}\r\n                    handleFunction={() => handleDelete(u)}\r\n                  />\r\n                ))}\r\n              </Box>\r\n              {loading ? (\r\n                // <ChatLoading />\r\n                <div>Loading...</div>\r\n              ) : (\r\n                searchResult\r\n                  ?.slice(0, 4)\r\n                  .map((user) => (\r\n                    <UserListItem\r\n                      key={user._id}\r\n                      user={user}\r\n                      handleFunction={() => handleGroup(user)}\r\n                    />\r\n                  ))\r\n              )}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button onClick={handleSubmit} colorScheme=\"blue\">\r\n                Create Chat\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default GroupChatModal;","import { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getSender } from \"../config/ChatLogics\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\r\nimport { Button } from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../context/ChatProvider\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    // console.log(user._id);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n    // eslint-disable-next-line\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        <GroupChatModal>\r\n          <Button\r\n            d=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </GroupChatModal>\r\n      </Box>\r\n      <Box\r\n        d=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {chats ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName}\r\n                </Text>\r\n                {chat.latestMessage && (\r\n                  <Text fontSize=\"xs\">\r\n                    <b>{chat.latestMessage.sender.name} : </b>\r\n                    {chat.latestMessage.content.length > 50\r\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n                      : chat.latestMessage.content}\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChats;","import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport {\r\n  Menu,\r\n  MenuButton,\r\n  MenuDivider,\r\n  MenuItem,\r\n  MenuList,\r\n} from \"@chakra-ui/menu\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport ChatLoading from \"../ChatLoading\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport NotificationBadge from \"react-notification-badge\";\r\nimport { Effect } from \"react-notification-badge\";\r\nimport { getSender } from \"../../config/ChatLogics\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\nimport { ChatState } from \"../../context/ChatProvider\";\r\n\r\nfunction SideDrawer() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingChat, setLoadingChat] = useState(false);\r\n\r\n  const {\r\n    setSelectedChat,\r\n    user,\r\n    notification,\r\n    setNotification,\r\n    chats,\r\n    setChats,\r\n  } = ChatState();\r\n\r\n  const toast = useToast();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const history = useHistory();\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!search) {\r\n      toast({\r\n        title: \"Please Enter something in search\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const accessChat = async (userId) => {\r\n    console.log(userId);\r\n\r\n    try {\r\n      setLoadingChat(true);\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\r\n\r\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\r\n      setSelectedChat(data);\r\n      setLoadingChat(false);\r\n      onClose();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error fetching the chat\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p=\"5px 10px 5px 10px\"\r\n        borderWidth=\"5px\"\r\n      >\r\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\r\n          <Button variant=\"ghost\" onClick={onOpen}>\r\n            <i className=\"fas fa-search\"></i>\r\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\r\n              Search User\r\n            </Text>\r\n          </Button>\r\n        </Tooltip>\r\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\r\n          Chit😉 - Chat🙂\r\n        </Text>\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1}>\r\n              <NotificationBadge\r\n                count={notification.length}\r\n                effect={Effect.SCALE}\r\n              />\r\n              <BellIcon fontSize=\"2xl\" m={1} />\r\n            </MenuButton>\r\n            <MenuList pl={2}>\r\n              {!notification.length && \"No New Messages\"}\r\n              {notification.map((notif) => (\r\n                <MenuItem\r\n                  key={notif._id}\r\n                  onClick={() => {\r\n                    setSelectedChat(notif.chat);\r\n                    setNotification(notification.filter((n) => n !== notif));\r\n                  }}\r\n                >\r\n                  {notif.chat.isGroupChat\r\n                    ? `New Message in ${notif.chat.chatName}`\r\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\r\n              <Avatar\r\n                size=\"sm\"\r\n                cursor=\"pointer\"\r\n                name={user.name}\r\n                src={user.pic}\r\n              />\r\n            </MenuButton>\r\n            <MenuList>\r\n              <ProfileModal user={user}>\r\n                <MenuItem>My Profile</MenuItem>{\" \"}\r\n              </ProfileModal>\r\n              <MenuDivider />\r\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\r\n          <DrawerBody>\r\n            <Box d=\"flex\" pb={2}>\r\n              <Input\r\n                placeholder=\"Search by name or email\"\r\n                mr={2}\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n              <Button onClick={handleSearch}>Go</Button>\r\n            </Box>\r\n            {loading ? (\r\n              <ChatLoading />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => accessChat(user._id)}\r\n                />\r\n              ))\r\n            )}\r\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;","import React from \"react\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport Chatbox from \"../components/Chatbox\";\r\nimport MyChats from \"../components/MyChats\";\r\nimport SideDrawer from \"../components/miscellaneous/Sidedrawer\";\r\nimport { ChatState } from \"../context/ChatProvider\";\r\n\r\nconst Chatpage = () => {\r\n  const [fetchAgain, setFetchAgain] = useState(false);\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      {user && <SideDrawer />}\r\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\r\n        {user && <MyChats fetchAgain={fetchAgain} />}\r\n        {user && (\r\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatpage;","import \"./App.css\";\nimport React from \"react\";\nimport Homepage from \"./Pages/HomePage\";\nimport { Route } from \"react-router-dom\";\nimport Chatpage from \"./Pages/ChatPage\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Homepage} exact />\n      <Route path=\"/chats\" component={Chatpage} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\n  export default reportWebVitals;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <BrowserRouter>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}